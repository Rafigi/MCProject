// <auto-generated />
using System;
using MCAPI.McContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MCAPI.Migrations
{
    [DbContext(typeof(McDbContext))]
    [Migration("20190901112923_Inizilation_Database")]
    partial class Inizilation_Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MCAPI.Models.Address", b =>
                {
                    b.Property<Guid>("AddressID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("StreetName")
                        .IsRequired();

                    b.Property<string>("StreetNumber")
                        .IsRequired();

                    b.Property<int>("Zipcode");

                    b.HasKey("AddressID");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("MCAPI.Models.Event", b =>
                {
                    b.Property<Guid>("EventID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Created")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("EndDate")
                        .IsRequired();

                    b.Property<string>("EndTime")
                        .IsRequired();

                    b.Property<string>("Headline")
                        .IsRequired();

                    b.Property<int>("RegistrationCount");

                    b.Property<Guid>("RouteID");

                    b.Property<string>("StartDate")
                        .IsRequired();

                    b.Property<string>("StartTime")
                        .IsRequired();

                    b.Property<Guid?>("UserID");

                    b.HasKey("EventID");

                    b.HasIndex("RouteID");

                    b.HasIndex("UserID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("MCAPI.Models.Registration", b =>
                {
                    b.Property<Guid?>("UserID");

                    b.Property<Guid?>("EventID");

                    b.HasKey("UserID", "EventID");

                    b.HasIndex("EventID");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("MCAPI.Models.Route", b =>
                {
                    b.Property<Guid>("RouteID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AddressID");

                    b.Property<string>("Created")
                        .IsRequired();

                    b.Property<double>("Distance");

                    b.Property<bool>("Ferry");

                    b.Property<bool>("Motorway");

                    b.Property<bool>("Toll");

                    b.Property<Guid?>("UserID");

                    b.HasKey("RouteID");

                    b.HasIndex("AddressID");

                    b.HasIndex("UserID");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("MCAPI.Models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Birthdate");

                    b.Property<string>("Created")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MCAPI.Models.Event", b =>
                {
                    b.HasOne("MCAPI.Models.Route", "Route")
                        .WithMany("Events")
                        .HasForeignKey("RouteID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MCAPI.Models.User", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("MCAPI.Models.Registration", b =>
                {
                    b.HasOne("MCAPI.Models.Event", "Event")
                        .WithMany("Registration")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MCAPI.Models.User", "User")
                        .WithMany("Registration")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MCAPI.Models.Route", b =>
                {
                    b.HasOne("MCAPI.Models.Address", "Address")
                        .WithMany("Routes")
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MCAPI.Models.User", "User")
                        .WithMany("Routes")
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
